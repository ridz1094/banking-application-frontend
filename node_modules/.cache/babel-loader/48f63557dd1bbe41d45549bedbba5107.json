{"ast":null,"code":"/*\nLanguage: STEP Part 21\nContributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\nDescription: Syntax highlighter for STEP Part 21 files (ISO 10303-21).\nWebsite: https://en.wikipedia.org/wiki/ISO_10303-21\n*/\nfunction step21(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_KEYWORDS = {\n    keyword: 'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'meta',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CLOSE = {\n    className: 'meta',\n    begin: 'END-ISO-10303-21;',\n    relevance: 10\n  };\n  return {\n    name: 'STEP Part 21',\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true,\n    // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [STEP21_START, STEP21_CLOSE, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'), hljs.C_NUMBER_MODE, hljs.inherit(hljs.APOS_STRING_MODE, {\n      illegal: null\n    }), hljs.inherit(hljs.QUOTE_STRING_MODE, {\n      illegal: null\n    }), {\n      className: 'string',\n      begin: \"'\",\n      end: \"'\"\n    }, {\n      className: 'symbol',\n      variants: [{\n        begin: '#',\n        end: '\\\\d+',\n        illegal: '\\\\W'\n      }]\n    }]\n  };\n}\n\nmodule.exports = step21;","map":{"version":3,"sources":["/Users/ridz/Desktop/Sem 2/CMPE-202/TeamProject/team-project-data_divers/frontend/node_modules/highlight.js/lib/languages/step21.js"],"names":["step21","hljs","STEP21_IDENT_RE","STEP21_KEYWORDS","keyword","STEP21_START","className","begin","relevance","STEP21_CLOSE","name","aliases","case_insensitive","lexemes","keywords","contains","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","COMMENT","C_NUMBER_MODE","inherit","APOS_STRING_MODE","illegal","QUOTE_STRING_MODE","end","variants","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,SAASA,MAAT,CAAgBC,IAAhB,EAAsB;AACpB,MAAIC,eAAe,GAAG,mBAAtB;AACA,MAAIC,eAAe,GAAG;AACpBC,IAAAA,OAAO,EAAE;AADW,GAAtB;AAGA,MAAIC,YAAY,GAAG;AACjBC,IAAAA,SAAS,EAAE,MADM;AAEjBC,IAAAA,KAAK,EAAE,eAFU;AAGjBC,IAAAA,SAAS,EAAE;AAHM,GAAnB;AAKA,MAAIC,YAAY,GAAG;AACjBH,IAAAA,SAAS,EAAE,MADM;AAEjBC,IAAAA,KAAK,EAAE,mBAFU;AAGjBC,IAAAA,SAAS,EAAE;AAHM,GAAnB;AAMA,SAAO;AACLE,IAAAA,IAAI,EAAE,cADD;AAELC,IAAAA,OAAO,EAAE,CAAC,KAAD,EAAQ,MAAR,EAAgB,KAAhB,CAFJ;AAGLC,IAAAA,gBAAgB,EAAE,IAHb;AAGmB;AACxBC,IAAAA,OAAO,EAAEX,eAJJ;AAKLY,IAAAA,QAAQ,EAAEX,eALL;AAMLY,IAAAA,QAAQ,EAAE,CACRV,YADQ,EAERI,YAFQ,EAGRR,IAAI,CAACe,mBAHG,EAIRf,IAAI,CAACgB,oBAJG,EAKRhB,IAAI,CAACiB,OAAL,CAAa,UAAb,EAAyB,MAAzB,CALQ,EAMRjB,IAAI,CAACkB,aANG,EAORlB,IAAI,CAACmB,OAAL,CAAanB,IAAI,CAACoB,gBAAlB,EAAoC;AAACC,MAAAA,OAAO,EAAE;AAAV,KAApC,CAPQ,EAQRrB,IAAI,CAACmB,OAAL,CAAanB,IAAI,CAACsB,iBAAlB,EAAqC;AAACD,MAAAA,OAAO,EAAE;AAAV,KAArC,CARQ,EASR;AACEhB,MAAAA,SAAS,EAAE,QADb;AAEEC,MAAAA,KAAK,EAAE,GAFT;AAEciB,MAAAA,GAAG,EAAE;AAFnB,KATQ,EAaR;AACElB,MAAAA,SAAS,EAAE,QADb;AAEEmB,MAAAA,QAAQ,EAAE,CACR;AACElB,QAAAA,KAAK,EAAE,GADT;AACciB,QAAAA,GAAG,EAAE,MADnB;AAEEF,QAAAA,OAAO,EAAE;AAFX,OADQ;AAFZ,KAbQ;AANL,GAAP;AA8BD;;AAEDI,MAAM,CAACC,OAAP,GAAiB3B,MAAjB","sourcesContent":["/*\nLanguage: STEP Part 21\nContributors: Adam Joseph Cook <adam.joseph.cook@gmail.com>\nDescription: Syntax highlighter for STEP Part 21 files (ISO 10303-21).\nWebsite: https://en.wikipedia.org/wiki/ISO_10303-21\n*/\n\nfunction step21(hljs) {\n  var STEP21_IDENT_RE = '[A-Z_][A-Z0-9_.]*';\n  var STEP21_KEYWORDS = {\n    keyword: 'HEADER ENDSEC DATA'\n  };\n  var STEP21_START = {\n    className: 'meta',\n    begin: 'ISO-10303-21;',\n    relevance: 10\n  };\n  var STEP21_CLOSE = {\n    className: 'meta',\n    begin: 'END-ISO-10303-21;',\n    relevance: 10\n  };\n\n  return {\n    name: 'STEP Part 21',\n    aliases: ['p21', 'step', 'stp'],\n    case_insensitive: true, // STEP 21 is case insensitive in theory, in practice all non-comments are capitalized.\n    lexemes: STEP21_IDENT_RE,\n    keywords: STEP21_KEYWORDS,\n    contains: [\n      STEP21_START,\n      STEP21_CLOSE,\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE,\n      hljs.COMMENT('/\\\\*\\\\*!', '\\\\*/'),\n      hljs.C_NUMBER_MODE,\n      hljs.inherit(hljs.APOS_STRING_MODE, {illegal: null}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'string',\n        begin: \"'\", end: \"'\"\n      },\n      {\n        className: 'symbol',\n        variants: [\n          {\n            begin: '#', end: '\\\\d+',\n            illegal: '\\\\W'\n          }\n        ]\n      }\n    ]\n  };\n}\n\nmodule.exports = step21;\n"]},"metadata":{},"sourceType":"script"}