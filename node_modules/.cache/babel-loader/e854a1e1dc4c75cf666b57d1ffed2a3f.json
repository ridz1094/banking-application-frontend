{"ast":null,"code":"/*\nLanguage: Handlebars\nRequires: xml.js\nAuthor: Robin Ward <robin.ward@gmail.com>\nDescription: Matcher for Handlebars as well as EmberJS additions.\nWebsite: https://handlebarsjs.com\nCategory: template\n*/\nfunction handlebars(hljs) {\n  var BUILT_INS = {\n    'builtin-name': 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup'\n  };\n  var IDENTIFIER_PLAIN_OR_QUOTED = {\n    begin: /\".*?\"|'.*?'|\\[.*?\\]|\\w+/\n  };\n  var EXPRESSION_OR_HELPER_CALL = hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\n    keywords: BUILT_INS,\n    starts: {\n      // helper params\n      endsWithParent: true,\n      relevance: 0,\n      contains: [hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\n        relevance: 0\n      })]\n    }\n  });\n  var BLOCK_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    className: 'name'\n  });\n  var BASIC_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    // relevance 0 for backward compatibility concerning auto-detection\n    relevance: 0\n  });\n  var ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\{\\{/,\n    skip: true\n  };\n  var PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {\n    begin: /\\\\\\\\(?=\\{\\{)/,\n    skip: true\n  };\n  return {\n    name: 'Handlebars',\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH, PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH, hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/), hljs.COMMENT(/\\{\\{!/, /\\}\\}/), {\n      // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n      className: 'template-tag',\n      begin: /\\{\\{\\{\\{(?!\\/)/,\n      end: /\\}\\}\\}\\}/,\n      contains: [BLOCK_MUSTACHE_CONTENTS],\n      starts: {\n        end: /\\{\\{\\{\\{\\//,\n        returnEnd: true,\n        subLanguage: 'xml'\n      }\n    }, {\n      // close raw block\n      className: 'template-tag',\n      begin: /\\{\\{\\{\\{\\//,\n      end: /\\}\\}\\}\\}/,\n      contains: [BLOCK_MUSTACHE_CONTENTS]\n    }, {\n      // open block statement\n      className: 'template-tag',\n      begin: /\\{\\{[#\\/]/,\n      end: /\\}\\}/,\n      contains: [BLOCK_MUSTACHE_CONTENTS]\n    }, {\n      // template variable or helper-call that is NOT html-escaped\n      className: 'template-variable',\n      begin: /\\{\\{\\{/,\n      end: /\\}\\}\\}/,\n      keywords: BUILT_INS,\n      contains: [BASIC_MUSTACHE_CONTENTS]\n    }, {\n      // template variable or helper-call that is html-escaped\n      className: 'template-variable',\n      begin: /\\{\\{/,\n      end: /\\}\\}/,\n      keywords: BUILT_INS,\n      contains: [BASIC_MUSTACHE_CONTENTS]\n    }]\n  };\n}\n\nmodule.exports = handlebars;","map":{"version":3,"sources":["/Users/ridz/Desktop/Sem 2/CMPE-202/TeamProject/team-project-data_divers/frontend/node_modules/highlight.js/lib/languages/handlebars.js"],"names":["handlebars","hljs","BUILT_INS","IDENTIFIER_PLAIN_OR_QUOTED","begin","EXPRESSION_OR_HELPER_CALL","inherit","keywords","starts","endsWithParent","relevance","contains","BLOCK_MUSTACHE_CONTENTS","className","BASIC_MUSTACHE_CONTENTS","ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH","skip","PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH","name","aliases","case_insensitive","subLanguage","COMMENT","end","returnEnd","module","exports"],"mappings":"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","sourcesContent":["/*\nLanguage: Handlebars\nRequires: xml.js\nAuthor: Robin Ward <robin.ward@gmail.com>\nDescription: Matcher for Handlebars as well as EmberJS additions.\nWebsite: https://handlebarsjs.com\nCategory: template\n*/\n\nfunction handlebars(hljs) {\n  var BUILT_INS = {'builtin-name': 'each in with if else unless bindattr action collection debugger log outlet template unbound view yield lookup'};\n\n  var IDENTIFIER_PLAIN_OR_QUOTED = {\n    begin: /\".*?\"|'.*?'|\\[.*?\\]|\\w+/\n  };\n\n  var EXPRESSION_OR_HELPER_CALL = hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {\n    keywords: BUILT_INS,\n    starts: {\n      // helper params\n      endsWithParent: true,\n      relevance: 0,\n      contains: [hljs.inherit(IDENTIFIER_PLAIN_OR_QUOTED, {relevance: 0})]\n    }\n  });\n\n  var BLOCK_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    className: 'name'\n  });\n\n  var BASIC_MUSTACHE_CONTENTS = hljs.inherit(EXPRESSION_OR_HELPER_CALL, {\n    // relevance 0 for backward compatibility concerning auto-detection\n    relevance: 0\n  });\n\n  var ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH = {begin: /\\\\\\{\\{/, skip: true};\n  var PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH = {begin: /\\\\\\\\(?=\\{\\{)/, skip: true};\n\n  return {\n    name: 'Handlebars',\n    aliases: ['hbs', 'html.hbs', 'html.handlebars'],\n    case_insensitive: true,\n    subLanguage: 'xml',\n    contains: [\n      ESCAPE_MUSTACHE_WITH_PRECEEDING_BACKSLASH,\n      PREVENT_ESCAPE_WITH_ANOTHER_PRECEEDING_BACKSLASH,\n      hljs.COMMENT(/\\{\\{!--/, /--\\}\\}/),\n      hljs.COMMENT(/\\{\\{!/, /\\}\\}/),\n      {\n        // open raw block \"{{{{raw}}}} content not evaluated {{{{/raw}}}}\"\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{(?!\\/)/, end: /\\}\\}\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS],\n        starts: {end: /\\{\\{\\{\\{\\//, returnEnd: true, subLanguage: 'xml'}\n      },\n      {\n        // close raw block\n        className: 'template-tag',\n        begin: /\\{\\{\\{\\{\\//, end: /\\}\\}\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS]\n      },\n      {\n        // open block statement\n        className: 'template-tag',\n        begin: /\\{\\{[#\\/]/, end: /\\}\\}/,\n        contains: [BLOCK_MUSTACHE_CONTENTS],\n      },\n      {\n        // template variable or helper-call that is NOT html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{\\{/, end: /\\}\\}\\}/,\n        keywords: BUILT_INS,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      },\n      {\n        // template variable or helper-call that is html-escaped\n        className: 'template-variable',\n        begin: /\\{\\{/, end: /\\}\\}/,\n        keywords: BUILT_INS,\n        contains: [BASIC_MUSTACHE_CONTENTS]\n      }\n    ]\n  };\n}\n\nmodule.exports = handlebars;\n"]},"metadata":{},"sourceType":"script"}